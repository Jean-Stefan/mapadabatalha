# Stage 1: Build the application
FROM node:20-alpine AS build-stage

# Install pnpm
RUN npm install -g pnpm

# Set working directory
WORKDIR /app

# Copy package files
COPY .npmrc package.json pnpm-lock.yaml* ./

# Install dependencies
RUN pnpm install --frozen-lockfile --force

# Copy the rest of the application
COPY . ./

# Build the application
RUN pnpm build

# Stage 2: Production image
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=20.x
ENV PNPM_HOME="/root/.local/share/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"

# Install Node.js and other dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libglib2.0-0 \
    libnss3 \
    libnspr4 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxcb1 \
    libxkbcommon0 \
    libx11-6 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libatspi2.0-0 \
    && curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - \
    && curl -fsSL https://get.pnpm.io/install.sh | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=build-stage /app/.output ./.output
COPY --from=build-stage /app/package.json ./package.json
COPY --from=build-stage /app/pnpm-lock.yaml* ./pnpm-lock.yaml
COPY --from=build-stage /app/node_modules ./node_modules
COPY --from=build-stage /app/server/database ./server/database
COPY --from=build-stage /app/drizzle.config.ts ./drizzle.config.ts

# Expose port 3000
EXPOSE 3000

# Start the application
CMD pnpm db:generate && pnpm db:migrate && pnpm db:push && pnpm start